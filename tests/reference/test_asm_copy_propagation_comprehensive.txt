ENTRY_0: #succs=[compute_2, main_5]

EXIT_1: #succs=[]

compute_2: #succs=[compute_3]
    x_0: int64 = x_0
    y_0: int64 = y_0
    temp_0: int64 = x_1
    temp_1: int64 = add(temp_2, y_1)
    return temp_3

compute_3: #succs=[EXIT_1]

compute_4: #succs=[compute_3]

main_5: #succs=[main_7, main_8]
    a_0: int64 = 10
    b_0: int64 = a_1
    c_0: int64 = b_1
    d_0: int64 = 5

main_6: #succs=[EXIT_1]

main_7: #succs=[main_9]
    assert(gt(c_1, 5)) 	# c_1 = 10
    a_2: int64 = add(a_3, d_1) 	# a_3 = 10, d_1 = 5
    b_2: int64 = a_4 	# a_4 = 10

main_8: #succs=[main_9]
    assert(not_(gt(c_1, 5))) 	# c_1 = 10

main_9: #succs=[main_10, main_11]
    result_0: int64 = 0
    j_3_0: int64 = 0

main_10: #succs=[main_12, main_13]
    assert(lt(j_3_0, 5))
    i_0: int64 = j_3_0
    temp_4: int64 = i_1
    result_1: int64 = add(result_2, temp_5)

main_11: #succs=[main_15, main_16]
    assert(not_(lt(j_3_0, 5)))

main_12: #succs=[main_14]
    assert(eq(mod(i_2, 2), 0)) 	# i_2 = j_3_0
    result_3: int64 = mul(result_4, 2)

main_13: #succs=[main_14]
    assert(not_(eq(mod(i_2, 2), 0))) 	# i_2 = j_3_0

main_14: #succs=[main_10, main_11]
    j_3_0: int64 = add(j_3_0, 1)

main_15: #succs=[main_17]
    assert(gt(result_5, 20))
    c_2: int64 = result_6
    result_7: int64 = add(c_3, b_3)

main_16: #succs=[main_17]
    assert(not_(gt(result_5, 20)))
    c_4: int64 = b_4
    result_8: int64 = mul(c_5, 3)

main_17: #succs=[main_18, main_19]
    j_4_0: int64 = 0

main_18: #succs=[main_20, main_21]
    assert(lt(j_4_0, 3))
    i_3: int64 = j_4_0
    a_5: int64 = i_4
    j_5_0: int64 = 0

main_19: #succs=[main_22, main_23]
    assert(not_(lt(j_4_0, 3)))
    d_2: int64 = result_11

main_20: #succs=[main_20, main_21]
    assert(lt(j_5_0, 2))
    j_0: int64 = j_5_0
    b_5: int64 = j_1
    result_9: int64 = add(result_10, add(a_6, b_6))
    j_5_0: int64 = add(j_5_0, 1)

main_21: #succs=[main_18, main_19]
    assert(not_(lt(j_5_0, 2)))
    j_4_0: int64 = add(j_4_0, 1)

main_22: #succs=[main_25, main_26]
    assert(lt(d_3, 100)) 	# d_3 = result_11
    c_6: int64 = d_4 	# d_4 = result_11

main_23: #succs=[main_24]
    assert(not_(lt(d_3, 100))) 	# d_3 = result_11
    result_14: int64 = d_5 	# d_5 = result_11

main_24: #succs=[main_6]
    a_7: int64 = result_15
    b_7: int64 = a_8
    return b_8

main_25: #succs=[main_27]
    assert(gt(c_7, 50)) 	# c_7 = result_11
    result_12: int64 = mul(c_8, 2) 	# c_8 = result_11

main_26: #succs=[main_27]
    assert(not_(gt(c_7, 50))) 	# c_7 = result_11
    result_13: int64 = c_9 	# c_9 = result_11

main_27: #succs=[main_24]

main_28: #succs=[main_6]
